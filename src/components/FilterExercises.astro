---
import type { Category } from "./ExerciseLibrary.astro";

interface Props {
  categories: Category[];
}

const { categories } = Astro.props;
---

<div class="flex flex-wrap gap-1">
  <button type="submit" class="px-4 py-2 bg-black border rounded-md text-electric-lime hover:text-lime-zest hover:border-lime-zest border-electric-lime">Filtrar</button>
  <button id="clear-filters" type="reset" class="px-4 py-2 bg-black border rounded-md text-electric-lime hover:text-lime-zest hover:border-lime-zest border-electric-lime">Quitar filtros</button>
  
  {categories.filter(parentcategory => !parentcategory.categoria_padre)
    .map(category => 
      <label for={`select-categories-${category.id}`} class="relative flex flex-col">
        <span id={`span-category-${category.titulo}`} class="px-4 py-2 rounded-md bg-electric-lime hover:bg-lime-zest hover:cursor-pointer">{category.titulo}</span>
        <select id={`select-categories-${category.id}`} multiple class="absolute z-10 hidden rounded-md top-11 categories bg-electric-lime hover:cursor-pointer hover:bg-lime-zest" name="categories">
          <option value="">{category.titulo}</option>
          {category.categorias_hijas?.map(subcategoryId => {
            const subcategory = categories.find(cat => cat.id === subcategoryId);
            return subcategory ? <option value={subcategory.id}>{subcategory.titulo}</option> : null;
          })}
        </select>
      </label>
    )
  }

  {categories.filter(subcategory => subcategory.categoria_padre && subcategory.categorias_hijas.length !== 0)
    .map(subcategory => 
      <label for={`select-subcategories-${subcategory.id}`} class="relative flex flex-col">
        <span id={`span-subcategory-${subcategory.titulo}`} class="px-4 py-2 rounded-md bg-electric-lime hover:bg-lime-zest hover:cursor-pointer">{subcategory.titulo}</span>
        <select id={`select-subcategories-${subcategory.id}`} multiple class="absolute z-10 hidden px-4 py-2 rounded-md top-11 subcategories bg-electric-lime hover:cursor-pointer hover:bg-lime-zest" name="subcategories">
          <option value="">{subcategory.titulo}</option>
          {subcategory.categorias_hijas?.map(subsubcategoryId => {
            const subsubcategory = categories.find(cat => cat.id === subsubcategoryId);
            return subsubcategory ? <option value={subsubcategory.id}>{subsubcategory.titulo}</option> : null;
          })}
        </select>
      </label>
    )
  }
</div>