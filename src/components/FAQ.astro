---
import { Image } from 'astro:assets';
import Questions from '../../public/images/services/questions.png';
---

<div class="flex flex-col items-center justify-center w-full mb-10" id="FAQ">
  <h3 class="text-5xl font-bold text-white">FAQ</h3>
  <span class="font-semibold text-white">Preguntas frecuentes</span>
</div>

<section class="flex flex-col items-center justify-center w-full mb-10 space-y-5 h-fit md:space-y-0 md:space-x-4">
  <div class="flex flex-col w-10/12 space-y-4 md:w-1/4" id="faq-section">
  </div>

  <div class="flex flex-col items-center justify-center w-10/12 space-y-1 md:w-1/4 h-fit">
    <div class="flex justify-center w-full">
      <Image src={Questions} alt="Logo" class="w-40"/>
    </div>
    <h3 class="text-2xl font-bold text-white">¿Alguna pregunta más?</h3>
    <h5 class="text-center text-white text-md">Déjame tus dudas en el correo y me pondré en contacto contigo</h5>
    <div class="flex items-center h-10 px-4 text-center bg-white rounded-xl w-fit">
      <a href="mailto:hola@javierolmotraining.es">hola@javierolmotraining.es</a>
    </div>
  </div>
</section>

<script>
  // URL de la API
  const apiUrl = 'https://www.padelchiquito.com/api/jolmo/faqs/';

  // Función para crear el HTML de cada FAQ
  function createFAQItem(pregunta, respuesta) {
    return `
      <div class="w-full h-auto faq-item">
        <div class="relative flex flex-row items-center justify-between w-full px-2 py-2 bg-white rounded-lg">
          <h4 class="text-lg font-semibold">${pregunta}</h4>
          <button class="w-6 h-6 font-extrabold text-white rounded-full toggle-button bg-electric-lime">+</button>
        </div>
        <p class="hidden w-full mt-2 text-white break-words">${respuesta}</p>
      </div>
    `;
  }

  // Función para cargar las FAQs desde la API y agregar el HTML
  async function loadFAQs() {
    try {
      const response = await fetch(apiUrl);
      const faqs = await response.json();

      const faqSection = document.getElementById('faq-section');
      faqSection.innerHTML = faqs.map(faq => createFAQItem(faq.pregunta, faq.respuesta)).join('');

      // Agregar el evento de clic a los botones una vez cargadas las FAQs
      document.querySelectorAll('.faq-item').forEach(item => {
        const button = item.querySelector('.toggle-button');
        const answer = item.querySelector('p');

        button.addEventListener('click', () => {
          const isVisible = !answer.classList.contains('hidden');
          answer.classList.toggle('hidden');
          button.textContent = isVisible ? '+' : '-';
        });
      });
    } catch (error) {
      console.error('Error al cargar las FAQs:', error);
    }
  }

  // Cargar las FAQs al cargar la página
  document.addEventListener('DOMContentLoaded', loadFAQs);
</script>

<script>
  document.querySelectorAll('.faq-item').forEach(item => {
    const button = item.querySelector('.toggle-button');
    const answer = item.querySelector('p');

    button.addEventListener('click', () => {
      const isVisible = !answer.classList.contains('hidden');
      answer.classList.toggle('hidden');
      button.textContent = isVisible ? '+' : '-';
    });
  });
</script>
